dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
seed <- getTraits(seedSel)
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
source("filter.R")
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",2,3),"EF"=c(2,3)),
fit.to = "allPlants",cores=1)
seedSel <- selectPlants(seedMod,measure = c("NPQ","EF"), method ="MSE",threshold = 0.005)
seedSel
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
seed <- getTraits(seedSel)
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",2,2),"EF"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","EF"), method ="MSE",threshold = 0.005)
seed <- getTraits(seedSel)
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"EF"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,me
seedSel <- selectPlants(seedMod,measure = c("NPQ","EF"), method ="MSE",threshold = 0.005)
seedSel
seed <- getTraits(seedSel)
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
seedSel <- selectPlants(seedMod,measure = c("NPQ","EF"), method ="MSE",threshold = 0.004)
seed <- getTraits(seedSel)
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
exportSeed(seed, file="../NIAB",extension = ".csv")
getwd()
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"EF"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","EF"), method ="MSE",threshold = 0.004)
seed <- getTraits(seedSel)
exportSeed(seed, file="../../NIAB",extension = ".csv")
pdf("../../NIAB_NPQ_NPQTriple_beta_gumbel_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EFGumbel3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","EF"), dropped=TRUE)
dev.off()
pdf("../../NIAB_NPQ_NPQTriple_beta_3_1.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_EF_2_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("EF"))
dev.off()
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.004)
seed <- getTraits(seedSel)
exportSeed(seed, file="../../NIAB",extension = ".csv")
pdf("../../NIAB_NPQ_NPQTriple_beta_3_1.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_OE_2_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("OE"))
dev.off()
pdf("../../NIAB_dropped.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ","OE"), dropped=TRUE)
dev.off()
dat <- read.csv("~/Downloads/For-Patrick.csv")
colnames(dat)
View(dat)
p <- dat$mL.sec
p
dat$Mass.loss.per.mat..ng.cm3[1] * p
dat <- read.csv("~/Downloads/For-Patrick.csv")
p <- dat$mL.sec[1]
tmp <- c()
n <- rep(0, nrow(dat))
for( i in seq(1, nrow(dat)){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p))
}
}
for( i in seq(1, nrow(dat))){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p))
}
}
for( i in seq(1, nrow(dat))){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p))
}
}
for( i in seq(1, nrow(dat))){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p)
}
}
n
dats  <- data.frame(dat[seq(1,grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+1)],
"NewCDR"=n,
dat[seq(grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+2, ncol(dat))])
colnames(dats)
View(dats)
write.csv(dats, file = "~/Downloads/ForAlma.csv", colnames= TRUE, rownames=FALSE)
write.csv(dats, file = "~/Downloads/ForAlma.csv", col.names= TRUE, row.names=FALSE)
plot(seq(1,nrow(dat)),n)
plot(seq(1,nrow(dat)),dats$Mass.loss...)
fit <- lm(Mass.loss..~ploy(Time..h,3), data = dats )
fit <- lm(Mass.loss...~ploy(Time..h,3), data = dats )
fit <- lm(Mass.loss...~poly(Time..h,3), data = dats )
fit
lines(seq(1,nrow(dat)),fitted(fit))
lines(seq(1,nrow(dat)),fitted(fit), col="red")
fit <- lm(Mass.loss...~poly(Time..h,4), data = dats )
lines(seq(1,nrow(dat)),fitted(fit), col="red")
plot(seq(1,nrow(dat)),dats$Mass.loss...)
fit <- lm(Mass.loss...~poly(Time..h,4), data = dats )
lines(seq(1,nrow(dat)),fitted(fit), col="red")
p
p /10
dat <- read.csv("~/Downloads/For-Patrick.csv")
p <- dat$mL.sec[1] /10
tmp <- c()
n <- rep(0, nrow(dat))
for( i in seq(1, nrow(dat))){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p)
}
}
dats  <- data.frame(dat[seq(1,grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+1)],
"NewCDR"=n,
dat[seq(grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+2, ncol(dat))])
write.csv(dats,file = "ForAlma.csv")
dir()
#### Data loading
dat <- read.csv("~/Downloads/For-Patrick.csv")
p <- dat$mL.sec[1] /10
tmp <- c()
n <- rep(0, nrow(dat))
for( i in seq(1, nrow(dat))){
if(i == 1){
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p
} else {
n[i] <- dat[i,"Mass.loss.per.mat..ng.cm3"]*p + (sum(dat[seq(1,i-1),"Mass.loss.per.mat..ng.cm3"])*p)
}
}
dats  <- data.frame(dat[seq(1,grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+1)],
"NewCDR"=n,
dat[seq(grep("Mass.loss.per.mat..ng.cm3",colnames(dat))+2, ncol(dat))])
write.csv(dats,file = "~/Downloads/ForAlma.csv")
dats <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/input_data/"
maps <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/map_ID/"
gewtd()
getwd()
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
dats <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/input_data/"
maps <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/map_ID/"
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
dim(tmp)
tmp[1:4,1:4]
tmpLoc <- sapply(seq(1,nrow(tmp)),function(idx,x,mi,ma){
x <- x[idx,]
mi <- mi[idx]; ma <- ma[idx]
return((x - mi)/(ma-mi))},
tmp[,!colnames(tmp) %in% c("diskID","Zone")],mi = tmpMin , ma = tmpMax )
dim(tmpLoc)
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
dats <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/input_data/"
maps <- "/Users/rwk115/Documents/NPQAnalysis/NPQTemp/map_ID/"
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.0044)
seed <- getTraits(seedSel)
seed
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
warnings()
seed <- selectPlants(seed)
traceback()
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- getTraits(seed)
seed <- selectPlants(seed)
tmpPass
boundaries[[rows]][[bound]]
boundaries[[rows]][[bound]][1] < boundaries[[rows]][[bound]][2]
boundaries[[rows]][[bound]][1]
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- selectPlants(seed)
seed <- getTraits(seed)
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- getTraits(seed)
dim(dfh)
param$startHighLight <- apply(dftmp,1,"[[",1)
param$endHighLight <- apply(dftmp,1,"[[",time[1])
param$minHighLight <- apply(dfh,1,min)
min
class(dfh)
param$maxHighLight <- apply(dfh,1,max)
param$LinearRate<-apply(dfh,1,.rate)
class(dfh)
dfh[1:4,1:4]
class(dfl)
apply(dfh,1,cclass
apply(dfh,1,class)
dfh[1,1]
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
str(tmpMin)
class(tmpMin)
dim(tmpMin)
tmpMin <- apply(tmp[,!colnames(tmp) %in% c("diskID","Zone")],1,function(x){
return(min(x))})
str(tmpMin)
class(tmpMin)
tmpLoc <- t(sapply(seq(1,nrow(tmp)),function(idx,x,mi,ma){
x <- x[idx,]
mi <- mi[idx]; ma <- ma[idx]
return((x - mi)/(ma-mi))},
tmp[,!colnames(tmp) %in% c("diskID","Zone")],mi = tmpMin , ma = tmpMax ))
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
param$startHighLight <- apply(dftmp,1,"[[",1)
param$endHighLight <- apply(dftmp,1,"[[",time[1])
param$minHighLight <- apply(dfh,1,min)
param$maxHighLight <- apply(dfh,1,max)
seed
seed@measures
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
tmpMax
class(tmpMax)
tmpMin <- as.vector(apply(tmp[,!colnames(tmp) %in% c("diskID","Zone")],1,function(x){
return(min(x))}))
names(tmpMin) <- NULL
tmpMax <- as.vector(apply(tmp[,!colnames(tmp) %in% c("diskID","Zone")],1,function(x){
return(max(x))}))
names(tmpMax) <- NULL
tmpMin
tmpLoc <- t(sapply(seq(1,nrow(tmp)),function(idx,x,mi,ma){
x <- x[idx,]
mi <- mi[idx]; ma <- ma[idx]
return((x - mi)/(ma-mi))},
tmp[,!colnames(tmp) %in% c("diskID","Zone")],mi = tmpMin , ma = tmpMax ))
tmpLoc[1,1]
class(tmpLoc[1,1])
tmpLoc <- sapply(seq(1,nrow(tmp)),function(idx,x,mi,ma){
x <- x[idx,]
mi <- mi[idx]; ma <- ma[idx]
return((x - mi)/(ma-mi))},
tmp[,!colnames(tmp) %in% c("diskID","Zone")],mi = tmpMin , ma = tmpMax )
class(tmpLoc)
class(tmpLoc[1,1])
tmpLoc[]
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed''
seed
seed@meta.param
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
param$startHighLight <- apply(dftmp,1,"[[",1)
param$endHighLight <- apply(dftmp,1,"[[",time[1])
param$minHighLight <- apply(dfh,1,min)
param$maxHighLight <- apply(dfh,1,max)
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seed <- getTraits(seed)
seed
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
library("parallel")
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=1)
library("reshape2")
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=1)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.0044)
warnings()
seed <- getTraits(seedSel)
seedMod
seedMod@models@NPQ
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.0044)
warnings()
seedMod@models@NPQ
setwd("/Users/rwk115/Documents/NPQAnalysis/lighteR/R")
files <- dir()
for(i in files)source(i)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
dir()
source("modelling.R")
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=1)
dat[dat$value==1,"value"] <-0.999999999
dat[dat$value==0,"value"] <-0.000000001
betareg(value ~ time, data=dat)
library(nlsr)
library(betareg)
source("modelling.R")
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.0044)
seed <- getTraits(seedSel)
seed
pdf("../../NIAB_NPQ_NPQTriple_beta_3_1.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.004)
seed <- getTraits(seedSel)
seed
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.005)
seed <- getTraits(seedSel)
pdf("../../NIAB_NPQ_NPQTriple_beta_3_1.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
pdf("../../NIAB_OE_2_3.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("OE"))
dev.off()
seed
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.008)
seed <- getTraits(seedSel)
seed
seed <- sowSeed(dats, maps)
seed <- getMeasure(seed)
seed <- getOrigin(seed, splitby = c("pedigree","line"))
seed <- selectPlants(seed)
seed <- getTraits(seed)
seedMod <- modelPlants(seed, models = list("NPQ"=c("beta",3,1),"OE"=c(2,3)),
fit.to = "allPlants",cores=10)
seedSel <- selectPlants(seedMod,measure = c("NPQ","OE"), method ="MSE",threshold = 0.01)
seed <- getTraits(seedSel)
seed
pdf("../../NIAB_NPQ_NPQTriple_beta_3_1.pdf",width=12, height =12)
par(mfrow = c(3,3))
plotSeed(seed, measure = c("NPQ"))
dev.off()
